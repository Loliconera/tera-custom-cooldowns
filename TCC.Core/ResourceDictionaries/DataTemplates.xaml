<ResourceDictionary x:Class="TCC.ResourceDictionaries.DataTemplates"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:controls="clr-namespace:Nostrum.WPF.Controls;assembly=Nostrum.WPF"
                    xmlns:nsConv="clr-namespace:Nostrum.WPF.Converters;assembly=Nostrum.WPF"
                    xmlns:extensions="clr-namespace:Nostrum.WPF.Extensions;assembly=Nostrum.WPF"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:data="clr-namespace:TCC.Data"
                    xmlns:abnormalities="clr-namespace:TCC.Data.Abnormalities"
                    xmlns:chat="clr-namespace:TCC.Data.Chat"
                    xmlns:pc="clr-namespace:TCC.Data.Pc"
                    xmlns:skills="clr-namespace:TCC.Data.Skills"
                    xmlns:abControls="clr-namespace:TCC.UI.Controls.Abnormalities"
                    xmlns:chatControls="clr-namespace:TCC.UI.Controls.Chat"
                    xmlns:dashboard="clr-namespace:TCC.UI.Controls.Dashboard"
                    xmlns:group="clr-namespace:TCC.UI.Controls.Group"
                    xmlns:npCs="clr-namespace:TCC.UI.Controls.NPCs"
                    xmlns:settings="clr-namespace:TCC.UI.Controls.Settings"
                    xmlns:skills1="clr-namespace:TCC.UI.Controls.Skills"
                    xmlns:windows="clr-namespace:TCC.UI.Windows"
                    xmlns:widgets="clr-namespace:TCC.UI.Windows.Widgets"
                    xmlns:vm="clr-namespace:TCC.ViewModels">
    <!--#region Skills -->
    <DataTemplate x:Key="RoundNormalSkill">
        <skills1:RoundSkillControl />
    </DataTemplate>
    <DataTemplate x:Key="SquareNormalSkill">
        <skills1:SquareSkillControl />
    </DataTemplate>
    <DataTemplate x:Key="RoundFixedSkill">
        <skills1:RoundFixedSkillControl />
    </DataTemplate>
    <DataTemplate x:Key="SquareFixedSkill">
        <skills1:SquareFixedSkillControl />
    </DataTemplate>
    <DataTemplate x:Key="SkillDataTemplate" DataType="skills:Skill">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse Width="30" Height="{Binding ElementName=icon, Path=ActualWidth}" x:Name="icon"
                     Stroke="#7fff"
                     StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.Fill>
                    <ImageBrush
                        ImageSource="{Binding IconName, Converter={StaticResource IconNameToPath}}" />
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" Foreground="#9fff" Text="{Binding ShortName}"
                       VerticalAlignment="Center" Margin="5 0" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FixedSkillDataTemplateForConfig" DataType="skills:Cooldown">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse Width="30" Height="{Binding ElementName=icon, Path=ActualWidth}" x:Name="icon"
                     Stroke="#7fff"
                     StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.Fill>
                    <ImageBrush
                        ImageSource="{Binding Skill.IconName, Converter={StaticResource IconNameToPath}}" />
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" Foreground="#9fff" Text="{Binding Skill.ShortName}"
                       VerticalAlignment="Center" Margin="5 0" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="FixedCooldownTemplate">
        <skills1:FixedSkillContainers />
    </DataTemplate>
    <DataTemplate x:Key="NormalCooldownTemplate">
        <skills1:NormalSkillContainer />
    </DataTemplate>

    <!--#endregion-->

    <!--#region Abnormalities -->
    <DataTemplate x:Key="SquareAbnormality">
        <abControls:SquareAbnormalityIndicator HorizontalAlignment="Right" Size="32">
            <abControls:SquareAbnormalityIndicator.Resources>
                <Style TargetType="{x:Type Path}">
                    <Setter Property="FlowDirection" Value="RightToLeft" />
                </Style>
            </abControls:SquareAbnormalityIndicator.Resources>
        </abControls:SquareAbnormalityIndicator>
    </DataTemplate>
    <DataTemplate x:Key="RoundAbnormality">
        <abControls:RoundAbnormalityIndicator HorizontalAlignment="Right" Size="32">
            <abControls:RoundAbnormalityIndicator.Resources>
                <Style TargetType="{x:Type Path}">
                    <Setter Property="FlowDirection" Value="RightToLeft" />
                </Style>
            </abControls:RoundAbnormalityIndicator.Resources>
        </abControls:RoundAbnormalityIndicator>
    </DataTemplate>
    <DataTemplate x:Key="RoundPartyAbnormality">
        <abControls:RoundAbnormalityIndicator Size="28" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="SquarePartyAbnormality">
        <abControls:SquareAbnormalityIndicator Size="28" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="RoundRaidAbnormality">
        <abControls:RoundAbnormalityIndicator Size="20" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="SquareRaidAbnormality">
        <abControls:SquareAbnormalityIndicator Size="20" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="RoundBossAbnormality">
        <abControls:RoundAbnormalityIndicator Size="30" Margin="2" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="SquareBossAbnormality">
        <abControls:SquareAbnormalityIndicator Size="30" Margin="2" DataContext="{Binding}" />
    </DataTemplate>
    <DataTemplate x:Key="AbnormalityDataTemplate" DataType="abnormalities:Abnormality">
        <Grid Background="Transparent" ToolTip="{Binding ToolTip}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Ellipse Width="30" Height="{Binding ElementName=icon, Path=ActualWidth}" x:Name="icon"
                     Stroke="#7fff"
                     StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.Fill>
                    <ImageBrush
                        ImageSource="{Binding IconName, Converter={StaticResource IconNameToPath}}" />
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" Foreground="#9fff" Text="{Binding Name}"
                       VerticalAlignment="Center" Margin="5 0" />
            <TextBlock Grid.Column="2" Foreground="#3fff" Text="{Binding Id}"
                       VerticalAlignment="Center" Margin="5 0" />
        </Grid>
    </DataTemplate>
    <!--#endregion-->

    <!--#region Chat -->
    <DataTemplate x:Key="SimpleTemplate" DataType="chat:SimpleMessagePiece">
        <Grid UseLayoutRounding="True">
            <TextBlock Foreground="{Binding Color, Converter={StaticResource StringToFill}}"
                       Text="{Binding Text}"
                       FontSize="{Binding Size}"
                       FontFamily="{StaticResource NotoSansMed}"
                       TextWrapping="Wrap"
                       FontWeight="Normal"
                       Opacity="1"
                       Width="Auto"
                       HorizontalAlignment="Stretch"
                       TextTrimming="None" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ClickableTemplate" DataType="chat:MessagePieceBase">
        <Grid UseLayoutRounding="True">
            <Border BorderBrush="{Binding Color, Converter={StaticResource StringToFill}}"
                    Visibility="{Binding IsHovered, Converter={nsConv:BoolToVisibility}}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderThickness="0 0 0 2" />
            <TextBlock Foreground="{Binding Color, Converter={StaticResource StringToFill}}"
                       Text="{Binding Text}"
                       Cursor="Hand"
                       FontSize="{Binding Size}"
                       FontFamily="{StaticResource NotoSansMed}"
                       TextWrapping="Wrap"
                       FontWeight="Normal"
                       Opacity="1"
                       Width="Auto"
                       HorizontalAlignment="Stretch"
                       TextTrimming="None" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MoneyTemplate">
        <chatControls:MoneyMessagePieceControl />
    </DataTemplate>
    <DataTemplate x:Key="EmojiTemplate">
        <chatControls:EmojiMessagePiece />
    </DataTemplate>
    <DataTemplate x:Key="IconTemplate" DataType="chat:IconMessagePiece">
        <Ellipse Width="24" Height="24" Margin="0 0 3 0" VerticalAlignment="Center">
            <Ellipse.Fill>
                <ImageBrush ImageSource="{Binding Text, Converter={StaticResource MessageTextToIcon}}" />
            </Ellipse.Fill>
        </Ellipse>

        <!--<Image RenderOptions.BitmapScalingMode="HighQuality" 
               Margin="-2 0 4 -4" 
               Width="18" 
               Stretch="Uniform" 
               HorizontalAlignment="Center" 
               Height="18" 
               Source="{Binding Text, Converter={StaticResource MessageTextToIcon}}"/>-->

    </DataTemplate>


    <DataTemplate x:Key="MessageHeaderTemplate">
        <chatControls:ChatMessageHeader />
    </DataTemplate>
    <DataTemplate x:Key="MessageBodyTemplate">
        <chatControls:MessagePieceBodyControl />
    </DataTemplate>
    <DataTemplate x:Key="DefaultBody">
        <chatControls:DefaultMessageBody />
    </DataTemplate>
    <DataTemplate x:Key="BrokerOfferBody">
        <chatControls:BrokerOfferBody />
    </DataTemplate>
    <DataTemplate x:Key="ApplyBody">
        <chatControls:ApplyBody />
    </DataTemplate>
    <DataTemplate x:Key="LfgBody">
        <chatControls:LfgBody />
    </DataTemplate>


    <DataTemplate x:Key="TranslationIndicatorTemplate" DataType="chat:MessagePieceBase">
        <chatControls:TranslationIndicator/> 
    </DataTemplate>


    <!--Channel label templates-->
    <DataTemplate x:Key="WhisperChannelLabelTemplate" DataType="chat:ChatMessage">
        <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
            <Path x:Name="arrow" Data="M12 8V4l8 8-8 8v-4H4V8z" Opacity=".7"
                  Stretch="Uniform" VerticalAlignment="Center">
                <Path.Style>
                    <Style TargetType="Path">
                        <Setter Property="Fill" Value="{StaticResource ChatWhisperBrush}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Channel}" Value="ReceivedWhisper">
                                <Setter Property="Fill" Value="Orange" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Path.Style>
            </Path>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Channel}" Value="ReceivedWhisper">
                <Setter TargetName="arrow" Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform CenterX="1"
                                        ScaleX="-1" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="MegaphoneChannelLabelTemplate">
        <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
            <Path
                Data="M81.114,30.146C73.196,11.725,60.456-2.306,54.009,0.316C43.062,4.765,60.53,26.133,6.774,47.984                                   c-4.643,1.887-5.82,9.441-3.877,13.957c1.939,4.515,8.291,9.01,12.936,7.123c0.803-0.326,3.754-1.275,3.754-1.275                                   c3.316,4.45,6.787,1.811,8.018,4.639c1.479,3.398,4.697,10.785,5.789,13.298c1.096,2.511,3.576,4.837,5.377,4.153                                   c1.795-0.684,7.91-3.011,10.25-3.901c2.338-0.89,2.896-2.974,2.182-4.619c-0.771-1.772-3.932-2.292-4.832-4.36                                   c-0.902-2.068-3.848-8.696-4.695-10.785c-1.152-2.841,1.295-5.152,4.85-5.522c24.467-2.55,29.041,12.561,37.371,9.173                                   C90.343,67.243,89.03,48.568,81.114,30.146z M78.358,60.03c-1.432,0.582-11.061-7.013-17.215-21.334                                   c-6.152-14.318-5.379-27.408-3.949-27.989c1.43-0.582,10.822,8.58,16.975,22.898C80.321,47.923,79.79,59.448,78.358,60.03z"
                Fill="#ff2b2b" Opacity=".7" Stretch="Uniform" VerticalAlignment="Center" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="DefaultChannelLabelTemplate" DataType="chat:ChatMessage">
        <TextBlock Foreground="{Binding Channel, Converter={StaticResource ChatChannelToColor}}"
                   Opacity=".5"
                   FontWeight="SemiBold"
                   FontSize="11"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   TextAlignment="Center"
                   Visibility="Visible"
                   MinWidth="33"
                   Margin="0 -3 0 0"
                   Text="{Binding Channel, Converter={StaticResource ChatChannelToName}}" />
        <!--TextTrimming="CharacterEllipsis"-->

    </DataTemplate>
    <DataTemplate x:Key="EnchantChannelLabelTemplate" DataType="chat:ChatMessage">
        <Grid>
            <TextBlock Foreground="{Binding Channel, Converter={StaticResource ChatChannelToColor}}"
                       Opacity=".8"
                       FontWeight="DemiBold"
                       FontSize="11"
                       FontFamily="{StaticResource NotoSansMed}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       TextAlignment="Center"
                       Visibility="Visible"
                       TextTrimming="CharacterEllipsis"
                       MinWidth="33"
                       Margin="0,-1,0,0"
                       Text="{Binding Channel, Converter={StaticResource ChatChannelToName}}" />
            <Border Width="Auto"
                    Height="Auto"
                    CornerRadius="5"
                    Margin="4,-2,2,3"
                    Opacity=".3"
                    Background="{Binding Channel, Converter={StaticResource ChatChannelToColor}}" />
        </Grid>
    </DataTemplate>

    <!--Author label templates-->
    <DataTemplate x:Key="DefaultAuthorTemplate" DataType="chat:ChatMessage">
        <!--<ctrl:OutlinedTextBlock  Margin="3,0,3,0" 
                        Fill="{Binding Channel, Converter={StaticResource ChatChannelToColor}}" 
                        FontSize="{Binding Size}"
                        HorizontalAlignment="Stretch"
                        TextAlignment="Left"
                        FontWeight="DemiBold"
                        FontFamily="{StaticResource NotoSansMed}"
                        Width="Auto"
                        MinWidth="0"
                        UseLayoutRounding="True"
                        Opacity=".9"
                        Text="{Binding Author}"
                        Cursor="Hand"
                        TextTrimming="CharacterEllipsis"
                        Stroke="#9000"
                        StrokeThickness="3"                       
                        />-->
        <TextBlock Margin="3 0"
                   Foreground="{Binding Channel, Converter={StaticResource ChatChannelToColor}}"
                   FontSize="{Binding Size}"
                   HorizontalAlignment="Stretch"
                   TextAlignment="Left"
                   FontWeight="Normal"
                   FontFamily="{StaticResource NotoSansMed}"
                   Width="Auto"
                   MinWidth="0"
                   UseLayoutRounding="True"
                   Opacity=".9"
                   TextTrimming="CharacterEllipsis">
            <Run Text="{Binding DisplayedAuthor, Mode=OneWay}" />
            <Path Data="{StaticResource SvgStar}" Fill="{StaticResource GoldBrush}"
                  Visibility="{Binding IsGm, Converter={StaticResource BoolToVisibility}}" Width="12" Height="12"
                  Margin="5 0 -1 -1">
                <Path.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="{StaticResource GoldColor}" BlurRadius="10" />
                </Path.Effect>
            </Path>
        </TextBlock>

    </DataTemplate>

    <DataTemplate x:Key="SystemAuthorTemplate" DataType="chat:ChatMessage">
        <Grid>
            <Rectangle Width="7"
                       Height="7"
                       Margin="3 5 3 0"
                       RenderTransformOrigin=".5 .5"
                       RenderTransform="{StaticResource Rotate45}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Opacity=".5"
                       Fill="{Binding Channel, Converter={StaticResource ChatChannelToColor}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ToolboxSystemAuthorTemplate" DataType="chat:ChatMessage">
        <Grid>
            <Rectangle Width="7"
                       Height="7"
                       Margin="3 5 3 0"
                       RenderTransformOrigin=".5 .5"
                       RenderTransform="{StaticResource Rotate45}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Opacity=".5"
                       Fill="{Binding Channel, Converter={StaticResource ChatChannelToColor}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="LfgTemplate">
        <chatControls:LfgControl Margin="1" />
    </DataTemplate>

    <DataTemplate x:Key="TabSettingsTemplate">
        <chatControls:TabSettingControl />
    </DataTemplate>
    <DataTemplate x:Key="SimpleChatChannelTemplate" DataType="chat:ChatChannelOnOff">
        <Grid ToolTip="{Binding Channel}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse Width="12" Height="12" Margin="4,0" VerticalAlignment="Center"
                     Fill="{Binding Channel, Converter={StaticResource ChatChannelToColor}}" />
            <TextBlock Grid.Column="1" Style="{StaticResource DefaultTextStyle}" VerticalAlignment="Center"
                       Foreground="#8fff" Text="{Binding Channel, Converter={StaticResource ChatChannelToName}}" />
        </Grid>
    </DataTemplate>

    <!--#endregion-->

    <!--#region NPCs -->
    <DataTemplate x:Key="BossDataTemplate">
        <npCs:BossGage />
    </DataTemplate>
    <DataTemplate x:Key="MobDataTemplate">
        <npCs:SmallMobControl />
    </DataTemplate>
    <DataTemplate x:Key="GuildTowerTemplate">
        <npCs:GuildTowerControl />
    </DataTemplate>
    <DataTemplate x:Key="DefaultEnemyWindowLayout">
        <npCs:DefaultEnemyWindowLayout />
    </DataTemplate>
    <DataTemplate x:Key="Phase1EnemyWindowLayout">
        <npCs:Phase1BossControl />
    </DataTemplate>
    <DataTemplate x:Key="Phase2EnemyWindowLayout">
        <npCs:Phase2BossControl />
    </DataTemplate>
    <DataTemplate x:Key="Phase2BEnemyWindowLayout">
        <npCs:Phase2BallistaBossControl />
    </DataTemplate>
    <DataTemplate x:Key="Phase3EnemyWindowLayout">
        <npCs:Phase3BossControl />
    </DataTemplate>
    <DataTemplate x:Key="Phase4EnemyWindowLayout">
        <npCs:Phase4BossControl />
    </DataTemplate>
    <DataTemplate x:Key="DragonIndicator">
        <npCs:DragonControl />
    </DataTemplate>
    <!--#endregion-->

    <!--#region Group members -->
    <DataTemplate x:Key="RoleColumnsGroupLayout">
        <group:RoleColumnsGroupLayout />
    </DataTemplate>
    <DataTemplate x:Key="SingleColumnGroupLayout">
        <group:SingleColumnGroupLayout />
    </DataTemplate>

    <DataTemplate x:Key="PartyDataTemplate">
        <group:PartyMember />
    </DataTemplate>
    <DataTemplate x:Key="RaidDataTemplate">
        <group:RaidMember />
    </DataTemplate>

    <DataTemplate x:Key="ReadyCheckIndicator" DataType="pc:User">
        <Grid x:Name="root">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" RenderingBias="Performance" BlurRadius="3" />
            </Grid.Effect>
            <Border x:Name="bg"
                    Width="16" Height="16"
                    RenderTransform="{StaticResource Rotate45}"
                    RenderTransformOrigin=".5 .5" />
            <Path x:Name="icon"
                  Width="10" Height="10"
                  Fill="Black"
                  Stretch="Uniform" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Ready}" Value="None">
                <Setter TargetName="root" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Ready}" Value="Ready">
                <Setter TargetName="bg" Property="Background" Value="{StaticResource LightGreenBrush}" />
                <Setter TargetName="icon" Property="Data" Value="{StaticResource SvgConfirm}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Ready}" Value="NotReady">
                <Setter TargetName="bg" Property="Background" Value="{StaticResource HpBrush}" />
                <Setter TargetName="icon" Property="Data" Value="{StaticResource SvgClose}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Ready}" Value="Undefined">
                <Setter TargetName="bg" Property="Background" Value="{StaticResource GoldBrush}" />
                <Setter TargetName="icon" Property="Data" Value="{StaticResource SvgMinimize}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="RollResultIndicator" DataType="pc:User">
        <Grid x:Name="root" Width="30">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="1" RenderingBias="Performance" BlurRadius="3" />
            </Grid.Effect>
            <Border x:Name="bg" CornerRadius="2" Background="White" />
            <TextBlock FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Margin="0,0,0,1" FontWeight="SemiBold"
                       Text="{Binding RollResult, Converter={StaticResource RollToString}}" />
            <Grid.RenderTransform>
                <ScaleTransform ScaleX="0" />
            </Grid.RenderTransform>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsRolling}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0"
                                             Storyboard.TargetName="root"
                                             Duration="0:0:0.100"
                                             Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource QuadraticEase}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1"
                                             Duration="0:0:0.100"
                                             Storyboard.TargetName="root"
                                             Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                             EasingFunction="{StaticResource QuadraticEase}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsWinning}" Value="True">
                <Setter TargetName="bg" Property="Background" Value="{StaticResource GoldBrush}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--#endregion-->

    <!--#region Dashboard -->
    <DataTemplate x:Key="NameClassCharDataTemplate" DataType="pc:Character">
        <Grid HorizontalAlignment="Stretch" ShowGridLines="False" Background="Transparent" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{Binding Class, Converter={StaticResource ClassToFill}}"
                       VerticalAlignment="Stretch"
                       HorizontalAlignment="Left"
                       StrokeThickness="0"
                       Width="4"
                       Margin="0 -1 0 0">
                <Rectangle.Style>
                    <Style TargetType="Shape">
                        <Setter Property="Opacity" Value=".3" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                       Grid.ColumnSpan="3" Grid.Column="0" StrokeThickness="0" Margin="0 -1 0 0">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0 .7" EndPoint="1 3">
                        <GradientStop Offset=".3" x:Name="StartGradient" Color="White" />
                        <!--Color="{Binding Class, Converter={StaticResource ClassToFill}}"-->
                        <GradientStop Offset=".9" Color="Transparent" />
                        <!--Color="{Binding Class,  Converter={StaticResource ClassToTransparentFill}}"-->
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.Style>
                    <Style TargetType="Shape">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                                <Setter Property="Opacity" Value=".08" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Path Grid.Column="0" Data="{Binding Class, Converter={StaticResource ClassToSvg}}" Width="20" Height="20"
                  Margin="10 4 5 4" VerticalAlignment="Center"
                  HorizontalAlignment="Center" />
            <TextBlock Text="{Binding Level}"
                       Grid.Column="1"
                       FontSize="9"
                       Foreground="#5fff"
                       TextAlignment="Center"
                       VerticalAlignment="Top">
                <TextBlock.RenderTransform>
                    <TranslateTransform X="0" Y="2" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Text="{Binding ItemLevel}"
                       Grid.Column="1"
                       VerticalAlignment="Center"
                       FontSize="9"
                       Width="15"
                       Foreground="{Binding ItemLevelTier, Converter={StaticResource IlvlTierToColor}}"
                       TextAlignment="Center">
                <TextBlock.RenderTransform>
                    <TranslateTransform X="0" Y="4" />
                </TextBlock.RenderTransform>

            </TextBlock>
            <TextBlock Text="{Binding Name}"
                       Grid.Column="2" Margin="4 0 0 0"
                       Style="{StaticResource DefaultTextStyle}"
                       VerticalAlignment="Center"
                       FontSize="14"
                       FontWeight="Thin"
                       Foreground="#8fff"
                       TextTrimming="CharacterEllipsis"
                       Cursor="Hand"
                       MouseLeftButtonDown="OnCharacterNameMouseLeftButtonDown" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="NameClassCharDataTemplateWithVM" DataType="dashboard:CharacterViewModel">
        <Grid HorizontalAlignment="Stretch" ShowGridLines="False" Background="Transparent" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{Binding Character.Class, Converter={StaticResource ClassToFill}}"
                       VerticalAlignment="Stretch" HorizontalAlignment="Left"
                       StrokeThickness="0" Width="4" Margin="0 -1 0 0">
                <Rectangle.Style>
                    <Style TargetType="Shape">
                        <Setter Property="Opacity" Value=".3" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Character.IsLoggedIn}" Value="True">
                                <Setter Property="Opacity" Value="1" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                       Grid.ColumnSpan="3" Grid.Column="0" StrokeThickness="0" Margin="0 -1 0 0">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0 .7" EndPoint="1 3">
                        <GradientStop Offset=".3" x:Name="StartGradient" Color="White" />
                        <!--Color="{Binding Class, Converter={StaticResource ClassToFill}}"-->
                        <GradientStop Offset=".9" Color="Transparent" />
                        <!--Color="{Binding Class,  Converter={StaticResource ClassToTransparentFill}}"-->
                    </LinearGradientBrush>
                </Rectangle.Fill>
                <Rectangle.Style>
                    <Style TargetType="Shape">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Character.IsLoggedIn}" Value="True">
                                <Setter Property="Opacity" Value=".08" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Rectangle VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Fill="#2ddf"
                       Grid.ColumnSpan="3" Grid.Column="0" StrokeThickness="0" Margin="0 -1 0 0">
                <Rectangle.Style>
                    <Style TargetType="Shape">
                        <Setter Property="Opacity" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Hilight}" Value="True">
                                <Setter Property="Opacity" Value=".2" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Rectangle.Style>
            </Rectangle>
            <Path Grid.Column="0" Data="{Binding Character.Class, Converter={StaticResource ClassToSvg}}" Width="20" Height="20"
                  Margin="10 4 5 4" VerticalAlignment="Center"
                  HorizontalAlignment="Center" />
            <TextBlock Text="{Binding Character.Level}"
                       Grid.Column="1"
                       FontSize="9"
                       Foreground="#5fff"
                       TextAlignment="Center"
                       VerticalAlignment="Top">
                <TextBlock.RenderTransform>
                    <TranslateTransform X="0" Y="2" />
                </TextBlock.RenderTransform>
            </TextBlock>
            <TextBlock Text="{Binding Character.ItemLevel}"
                       Grid.Column="1"
                       VerticalAlignment="Center"
                       FontSize="9"
                       Width="15"
                       Foreground="{Binding Character.ItemLevelTier, Converter={StaticResource IlvlTierToColor}}"

                       TextAlignment="Center">
                <TextBlock.RenderTransform>
                    <TranslateTransform X="0" Y="4" />
                </TextBlock.RenderTransform>

            </TextBlock>
            <TextBlock Text="{Binding Character.Name}"
                       Grid.Column="2" Margin="4 0 0 0"
                       Style="{StaticResource DefaultTextStyle}"
                       VerticalAlignment="Center"
                       FontSize="14"
                       FontWeight="Thin"
                       Foreground="#8fff"
                       TextTrimming="CharacterEllipsis" />
        </Grid>
    </DataTemplate>
    <!--#endregion-->

    <!--#region Notifications -->
    <DataTemplate x:Key="DefaultNotificationTemplate" DataType="widgets:NotificationInfoBase">
        <widgets:DefaultNotificationControl />
    </DataTemplate>
    <DataTemplate x:Key="ProgressNotificationTemplate" DataType="widgets:ProgressNotificationInfo">
        <widgets:ProgressNotificationControl />
    </DataTemplate>
    <!--#endregion-->

    <!--#region LFG-->
    <DataTemplate x:Key="PlayerDt" DataType="pc:User">
        <Grid Background="Transparent" Grid.IsSharedSizeScope="False" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" SharedSizeGroup="A" />
                <ColumnDefinition Width="2*" SharedSizeGroup="B" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
            </Grid.ColumnDefinitions>
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseRightButtonDown">
                    <b:InvokeCommandAction Command="{Binding RequestInteractiveCommand}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Path Fill="#afff"
                      Opacity="1"
                      Margin="4" RenderOptions.BitmapScalingMode="Fant" UseLayoutRounding="True"
                      HorizontalAlignment="Left" VerticalAlignment="Center"
                      Width="16" Height="16" Stretch="Uniform"
                      Data="{Binding UserClass, Converter={StaticResource ClassToSvg}}" />

                <TextBlock Foreground="#6fff" Style="{StaticResource DefaultTextStyle}" Margin="0 0 0 0"
                           VerticalAlignment="Center">
                    <Run Text="lv." Foreground="#5999" FontSize="10" />
                    <Run Text="{Binding Level, Mode=OneWay}" Foreground="#5999" FontSize="10" />
                    <Run Text="{Binding Name, Mode=OneWay}" />
                </TextBlock>
                <Path Data="{StaticResource SvgDelegateLeader}"
                      Fill="{StaticResource GoldBrush}" Height="8"
                      Visibility="{Binding IsLeader, Converter={nsConv:BoolToVisibility}}"
                      HorizontalAlignment="Right" Margin="5 0 5 -1" />
            </StackPanel>
            <TextBlock Text="{Binding Location}" Grid.Column="2" Foreground="#6fff"
                       Style="{StaticResource DefaultTextStyle}" Margin="0 0 0 0" VerticalAlignment="Center" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Online}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="1" To=".3"
                                             Duration="0:0:0.2"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From=".3" To="1"
                                             Duration="0:0:0.2"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="ApplicantDt" DataType="pc:User">
        <Grid Background="Transparent" Grid.IsSharedSizeScope="False" ShowGridLines="False">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseRightButtonDown">
                    <b:InvokeCommandAction Command="{Binding RequestInteractiveCommand}" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" SharedSizeGroup="A" />
                <ColumnDefinition Width="2*" SharedSizeGroup="B" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="Path" BasedOn="{StaticResource NostrumDefaultPathStyle}">
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Height" Value="12" />
                    <Setter Property="Fill" Value="#bfff" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Path Fill="#afff"
                      Opacity="1"
                      Margin="4" RenderOptions.BitmapScalingMode="Fant" UseLayoutRounding="True"
                      HorizontalAlignment="Left" VerticalAlignment="Center"
                      Width="16" Height="16" Stretch="Uniform"
                      Data="{Binding UserClass, Converter={StaticResource ClassToSvg}}" />
                <TextBlock Foreground="{StaticResource GoldBrush}" Style="{StaticResource DefaultTextStyle}"
                           Margin="0 0 0 0"
                           VerticalAlignment="Center">
                    <Run Text="lv." Foreground="#5999" FontSize="10" />
                    <Run Text="{Binding Level, Mode=OneWay}" Foreground="#5999" FontSize="10" />
                    <Run Text="{Binding Name, Mode=OneWay}" />
                </TextBlock>
                <Path Data="{StaticResource SvgDelegateLeader}" Fill="{StaticResource GoldBrush}" Height="8"
                      Visibility="{Binding IsLeader, Converter={nsConv:BoolToVisibility}}"
                      HorizontalAlignment="Right" Margin="5 0 5 1" />
            </StackPanel>

            <TextBlock Text="{Binding Location}" Grid.Column="2" Foreground="#6fff"
                       Style="{StaticResource DefaultTextStyle}" Margin="0 0 0 0" VerticalAlignment="Center" />
            <UniformGrid Grid.Column="2" Rows="1" HorizontalAlignment="Right">
                <UniformGrid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource NostrumContentOpacityButtonStyle}">
                        <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="2" />
                        <Setter Property="Margin" Value="2 3" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                    </Style>
                </UniformGrid.Resources>
                <Button Command="{Binding InspectCommand}"
                        ToolTip="Inspect">
                    <Path Data="{StaticResource SvgEye}" />
                </Button>

                <Button Command="{Binding AcceptApplyCommand}"
                        ToolTip="Accept"
                        Visibility="{Binding Path=DataContext.(vm:LfgListViewModel.AmILeader), RelativeSource={RelativeSource AncestorType=windows:LfgListWindow}, Converter={nsConv:BoolToVisibility}}">
                    <Path Data="{StaticResource SvgConfirm}"
                          Fill="{StaticResource GreenBrush}" />
                </Button>

                <Button Command="{Binding DeclineApplyCommand}"
                        ToolTip="Decline"
                        Visibility="{Binding Path=DataContext.(vm:LfgListViewModel.AmILeader), RelativeSource={RelativeSource AncestorType=windows:LfgListWindow}, Converter={nsConv:BoolToVisibility}}">
                    <Path Data="{StaticResource SvgClose}"
                          Fill="{StaticResource HpBrush}" />
                </Button>
            </UniformGrid>

        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Online}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From="1" To=".3"
                                             Duration="0:0:0.2"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation From=".3" To="1"
                                             Duration="0:0:0.2"
                                             Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type data:Listing}" x:Key="ListingDt">
        <DataTemplate.Resources>
            <Style TargetType="ListBoxItem" x:Key="PlayerListItemStyle">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <!--<Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid Style="{StaticResource GlowHoverGridLeft}">
                                <!--<Rectangle x:Name="hl" Fill="#1fff" Opacity="0" />-->
                                <ContentPresenter />
                            </Grid>
                            <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" TargetName="hl" />
                            </Trigger>

                        </ControlTemplate.Triggers>-->
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </DataTemplate.Resources>
        <Grid HorizontalAlignment="Stretch" Height="Auto" Background="Transparent"
              ShowGridLines="False" x:Name="MainGrid">
            <b:Interaction.Triggers>
                <b:EventTrigger EventName="MouseLeftButtonDown">
                    <b:InvokeCommandAction Command="{Binding ExpandCollapseCommand}" CommandParameter="True" />
                </b:EventTrigger>
            </b:Interaction.Triggers>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="345" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="30" />
                <ColumnDefinition Width="22" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" x:Name="DotsRow" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Grid.RowSpan="6"
                    Background="#2000" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Grid.ColumnSpan="5"
                    CornerRadius="1"
                    Margin="-5 0 -5 0"
                    BorderThickness="0" />
            <Border Grid.Row="2" Grid.RowSpan="4"
                    Background="#2000" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Grid.ColumnSpan="5" Grid.Column="0"
                    Margin="-5 0 -5 0"
                    BorderThickness="0 1 0 0"
                    BorderBrush="#0affffff"
                    CornerRadius="1" />
            <Border x:Name="hover"
                    Margin="-5 0 -5 0"
                    Grid.ColumnSpan="4" Grid.Column="0"
                    CornerRadius="1"
                    Opacity=".3"
                    Grid.Row="0" Grid.RowSpan="2">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource ChatPartyColor}" Opacity=".5" />

                </Border.Background>

            </Border>
            <Border HorizontalAlignment="Stretch" x:Name="Ell"
                    Margin="-5 0 -5 0"
                    Grid.ColumnSpan="4" Grid.Column="0"
                    Grid.Row="0" Grid.RowSpan="5"
                    Opacity=".5"
                    BorderThickness="3 0 0 0"
                    CornerRadius="1 0 0 1"
                    BorderBrush="{StaticResource ChatPartyBrush}" />
            <TextBox Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Foreground="#afff"
                     x:Name="MessageTb"
                     FontSize="14"
                     FontWeight="Normal"
                     HorizontalAlignment="Left"
                     Background="Transparent"
                     BorderThickness="0"
                     CaretBrush="White"
                     IsReadOnly="{Binding IsMyLfg, Converter={StaticResource BoolInverter}}"
                     IsHitTestVisible="{Binding IsMyLfg}"
                     Margin="3 3 0 3"
                     VerticalAlignment="Center"
                     GotKeyboardFocus="LfgMessage_OnGotKeyboardFocus"
                     LostKeyboardFocus="LfgMessage_OnTbLostKeyboardFocus"
                     KeyDown="LfgMessage_OnKeyDown"
                     PreviewMouseLeftButtonDown="LfgMessage_OnMouseLeftButtonDown"
                     Grid.Row="0" Grid.Column="1">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="PreviewMouseLeftButtonDown">
                        <b:InvokeCommandAction Command="{Binding BrowseTwitchCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </TextBox>
            <ItemsControl ItemsSource="{Binding Players}"
                          Grid.Column="2"
                          Grid.ColumnSpan="2"
                          VerticalAlignment="Center"
                          Grid.Row="0" Grid.RowSpan="2"
                          Height="Auto"
                          Width="50"
                          HorizontalAlignment="Right"
                          Margin="3 1 20 0">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"
                                   FlowDirection="RightToLeft" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Ellipse Width="3" Height="3"
                                 x:Name="ell"
                                 Opacity=".5"
                                 Margin="1" />
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Role}" Value="0">
                                <Setter Property="Fill" TargetName="ell" Value="{StaticResource DpsRoleBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Role}" Value="1">
                                <Setter Property="Fill" TargetName="ell" Value="{StaticResource TankRoleBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Role}" Value="2">
                                <Setter Property="Fill" TargetName="ell" Value="{StaticResource HealerRoleBrush}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Text="{Binding LeaderName}"
                       Style="{StaticResource DefaultTextStyle}"
                       Grid.Column="2"
                       Grid.Row="0" Grid.RowSpan="2"
                       x:Name="LeaderNameTb"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       MaxWidth="100"
                       ToolTip="{Binding LeaderName}"
                       TextTrimming="CharacterEllipsis"/>
            <TextBlock Style="{StaticResource DefaultTextStyle}"
                       Grid.Column="3"
                       Grid.Row="0" Grid.RowSpan="2"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center">
                <Run Text="{Binding PlayerCount, Mode=OneWay}" />
            </TextBlock>
            <TextBlock Foreground="#5fff"
                       FontSize="10"
                       Grid.Row="0" Grid.RowSpan="2"
                       Grid.Column="1"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"
                       Margin="15 0"
                       Text="{Binding AliveSinceMs, Converter={nsConv:DurationToStringConverter Mode=Extended}}" />
            <ListBox ItemsSource="{Binding Players}"
                     x:Name="players"
                     Grid.Row="3"
                     Grid.ColumnSpan="5"
                     Grid.Column="0"
                     Margin="10 0 0 0"
                     Background="Transparent"
                     BorderThickness="0"
                     HorizontalAlignment="Stretch"
                     ItemTemplate="{StaticResource PlayerDt}"
                     ItemContainerStyle="{StaticResource PlayerListItemStyle}">
                <ListBox.Template>
                    <ControlTemplate TargetType="ListBox">
                        <ItemsPresenter />
                    </ControlTemplate>
                </ListBox.Template>
                <ListBox.LayoutTransform>
                    <ScaleTransform ScaleY="0" />
                </ListBox.LayoutTransform>
            </ListBox>
            <Grid Grid.ColumnSpan="5" Grid.Column="0"
                  Grid.Row="4"
                  x:Name="ApplicantsGrid"
                  Visibility="Collapsed">
                <Separator x:Name="Sep" VerticalAlignment="Top" Margin="0 0 0 0">
                    <Separator.Background>
                        <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                            <GradientStop Color="Transparent" />
                            <GradientStop Color="#3fff" Offset=".5" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </LinearGradientBrush>
                    </Separator.Background>
                    <Separator.LayoutTransform>
                        <ScaleTransform ScaleY="0" />
                    </Separator.LayoutTransform>
                </Separator>
                <ListBox ItemsSource="{Binding Applicants}"
                         x:Name="applicants"
                         Margin="10 4 10 3"
                         Background="Transparent"
                         BorderThickness="0"
                         HorizontalAlignment="Stretch"
                         ItemTemplate="{StaticResource ApplicantDt}"
                         ItemContainerStyle="{StaticResource PlayerListItemStyle}">
                    <ListBox.Template>
                        <ControlTemplate TargetType="ListBox">
                            <ItemsPresenter />
                        </ControlTemplate>
                    </ListBox.Template>
                </ListBox>

                <Grid.LayoutTransform>
                    <ScaleTransform ScaleY="0" />
                </Grid.LayoutTransform>
            </Grid>
            <controls:Arc StrokeThickness="10"
                          Stroke="{StaticResource Tier5DungeonBrush}"
                          Grid.Row="0" Grid.Column="4"
                          Width="22"
                          Height="22"
                          EndAngle="0"
                          Opacity=".8"
                          HorizontalAlignment="Center"
                          Margin="4 0 -4 0"
                          x:Name="cdArc" />
            <Button x:Name="btn"
                    Grid.Row="0" Grid.RowSpan="2"
                    VerticalAlignment="Center"
                    Grid.Column="4"
                    HorizontalAlignment="Right"
                    HorizontalContentAlignment="Stretch"
                    Margin=" 0 0 0 0"
                    Width="15"
                    Style="{StaticResource NostrumContentOpacityButtonStyle}"
                    Command="{Binding OpenPopupCommand}">
                <Path Data="{StaticResource SvgDotsVertical}" Margin="3" Height="12" Width="15"
                      Stretch="Uniform" ToolTip="Apply"
                      Fill="White" />

            </Button>
            <Popup Grid.Row="0" Grid.Column="0" PlacementTarget="{Binding ElementName=btn}"
                   IsOpen="{Binding IsPopupOpen}"
                   PopupAnimation="Slide"
                   AllowsTransparency="True"
                   MouseLeave="LfgPopup_OnMouseLeave"
                   Placement="Right"
                   HorizontalOffset="15">
                <Grid Margin="10">
                    <Border Background="{StaticResource RevampDarkerBackgroundBrush}"
                            Style="{StaticResource RevampBorderStyle}">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="15" Opacity=".4" Direction="-90" />
                        </Border.Effect>
                    </Border>
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource NostrumMainButtonStyle}">
                                <Setter Property="Padding" Value="10 5" />
                            </Style>
                            <Style TargetType="{x:Type Path}" BasedOn="{StaticResource NostrumDefaultPathStyle}">
                                <Setter Property="Width" Value="16" />
                                <Setter Property="Height" Value="16" />
                                <Setter Property="Margin" Value="0 5 10 5" />
                            </Style>
                        </StackPanel.Resources>
                        <Button x:Name="ApplyButton"
                                extensions:ButtonExtensions.CornerRadius="3"
                                Command="{Binding ApplyCommand}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Path Data="{StaticResource SvgUserAdd}" />
                                <TextBlock Text="Apply" Grid.Column="1"
                                           VerticalAlignment="Center" />
                            </Grid>
                        </Button>
                        <Button x:Name="WhisperLeaderButton"
                                extensions:ButtonExtensions.CornerRadius="3"
                                Command="{Binding WhisperLeaderCommand}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Path Data="{StaticResource SvgChatMessage}" />
                                <TextBlock Grid.Column="1"
                                           VerticalAlignment="Center">
                                    <Run Text="Whisper" />
                                    <Run Text="{Binding LeaderName, Mode=OneWay}" />
                                </TextBlock>
                            </Grid>
                        </Button>
                        <Button x:Name="DeleteButton"
                                Command="{Binding RemoveCommand}"
                                Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Path Data="{StaticResource SvgClose}" />
                                <TextBlock Text="Remove" Grid.Column="1"
                                           VerticalAlignment="Center" />
                            </Grid>

                        </Button>
                        <Button x:Name="RefreshButton"
                                Command="{Binding RefreshApplicantsCommand}"
                                Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Path Data="{StaticResource SvgReload}" />
                                <TextBlock Text="Refresh applies" Grid.Column="1"
                                           Foreground="White"
                                           VerticalAlignment="Center" />
                            </Grid>


                        </Button>
                    </StackPanel>
                </Grid>
            </Popup>

        </Grid>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="hover" Property="Opacity" Value="0" />
            </Trigger>
            <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="players"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             Duration="0:0:0.15"
                                             EasingFunction="{StaticResource QuadraticEase}" />
                            <DoubleAnimation Storyboard.TargetName="btn"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             To="1"
                                             Duration="0:0:0.15" />
                            <ThicknessAnimation Storyboard.TargetName="players"
                                                Storyboard.TargetProperty="Margin"
                                                To="10 5 10 3"
                                                EasingFunction="{StaticResource QuadraticEase}"
                                                Duration="0:0:0.15" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="players"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             To="0"
                                             Duration="0:0:0.15" />
                            <DoubleAnimation Storyboard.TargetName="btn"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             To="0"
                                             Duration="0:0:0.15" />
                            <ThicknessAnimation Storyboard.TargetName="players"
                                                Storyboard.TargetProperty="Margin"
                                                EasingFunction="{StaticResource QuadraticEase}"
                                                To="10 0"
                                                Duration="0:0:0.15" />

                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding CanApply}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="cdArc"
                                             Storyboard.TargetProperty="EndAngle"
                                             From="359.9" To="0"
                                             Duration="0:0:5" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsRaid}" Value="True">

                <Setter TargetName="hover" Property="Background">
                    <Setter.Value>

                        <SolidColorBrush Color="{StaticResource Tier4DungeonColor}" Opacity=".5" />

                    </Setter.Value>
                </Setter>
                <Setter TargetName="Ell" Property="BorderBrush" Value="{StaticResource Tier4DungeonBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTrade}" Value="True">
                <Setter TargetName="Ell" Property="BorderBrush" Value="{StaticResource ChatTradeBrush}" />
                <Setter TargetName="hover" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource ChatTradeColor}" Opacity=".5" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="MessageTb" Property="Foreground" Value="{StaticResource ChatTradeBrush}" />
                <Setter TargetName="LeaderNameTb" Property="Foreground" Value="{StaticResource ChatTradeBrush}" />
                <Setter TargetName="DotsRow" Property="Height" Value="0" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTwitch}" Value="True">
                <Setter TargetName="MessageTb" Property="Foreground" Value="{StaticResource TwitchBrush}" />
                <Setter TargetName="LeaderNameTb" Property="Foreground" Value="{StaticResource TwitchBrush}" />
                <Setter TargetName="MessageTb" Property="Cursor" Value="Hand" />
                <Setter TargetName="Ell" Property="BorderBrush" Value="{StaticResource TwitchBrush}" />
                <Setter TargetName="DotsRow" Property="Height" Value="0" />
                <Setter TargetName="hover" Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TwitchColor}" Opacity=".5" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="MessageTb" Property="IsHitTestVisible" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMyLfg}" Value="True">
                <Setter Property="Foreground" TargetName="MessageTb" Value="{StaticResource GreenBrush}" />
                <Setter Property="Visibility" TargetName="cdArc" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="ApplicantsGrid" Value="Visible" />
                <Setter Property="Visibility" TargetName="ApplyButton" Value="Collapsed" />
                <Setter Property="Visibility" TargetName="DeleteButton" Value="Visible" />
                <Setter Property="Visibility" TargetName="RefreshButton" Value="Visible" />
                <Setter Property="Visibility" TargetName="WhisperLeaderButton" Value="Collapsed" />
                <Setter Property="Background" TargetName="hover">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource GreenColor}" Opacity=".5" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFullOffline}" Value="True">
                <Setter TargetName="MainGrid" Property="Opacity" Value=".5" />
                <Setter TargetName="Ell" Property="BorderBrush" Value="SlateGray" />
                <Setter TargetName="hover" Property="Background" Value="SlateGray" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMyLfg}" Value="True" />
                    <Condition Binding="{Binding ElementName=applicants, Path=HasItems}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Visibility" TargetName="Sep" Value="Visible" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsExpanded}" Value="True" />
                    <Condition Binding="{Binding IsMyLfg}" Value="True" />
                    <Condition Binding="{Binding ElementName=applicants, Path=HasItems}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Sep"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             Duration="0:0:0.15" />

                            <DoubleAnimation Storyboard.TargetName="ApplicantsGrid"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             Duration="0:0:0.15" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Sep"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="0"
                                             Duration="0:0:0.15" />
                            <DoubleAnimation Storyboard.TargetName="ApplicantsGrid"
                                             Storyboard.TargetProperty="(LayoutTransform).(ScaleTransform.ScaleY)"
                                             EasingFunction="{StaticResource QuadraticEase}"
                                             To="0"
                                             Duration="0:0:0.15" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>


            </MultiDataTrigger>

        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate DataType="{x:Type data:Listing}" x:Key="TempListingDt">
        <Grid HorizontalAlignment="Stretch" Height="Auto" Background="Transparent"
              ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="345" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="60" />
                <ColumnDefinition Width="30" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="28" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.RowSpan="4"
                    Background="#2000" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Grid.ColumnSpan="6"
                    Margin="-5 0 -5 0"
                    BorderThickness="0 1 0 0"
                    BorderBrush="#1fff"
                    CornerRadius="0 0 0 0" />
            <Border HorizontalAlignment="Stretch" x:Name="Ell"
                    Margin="-5 0 -5 0"
                    Grid.ColumnSpan="6" Grid.Column="0"
                    Grid.Row="0" Grid.RowSpan="5"
                    Opacity="1"
                    BorderThickness="2 0 0 0"
                    CornerRadius="0"
                    BorderBrush="{StaticResource GreenBrush}">
                <Border.Background>
                    <LinearGradientBrush>
                        <GradientStop
                            Color="{Binding Path=., Source={StaticResource GreenColor}, Converter={nsConv:ColorToTransparent Opacity=0.5}}"
                            Offset="0" />
                        <GradientStop
                            Color="{Binding Path=., Source={StaticResource GreenColor}, Converter={nsConv:ColorToTransparent}}"
                            Offset="1" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <TextBox Text="{Binding Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Grid.Row="0" Grid.Column="1"
                     Foreground="#9fff"
                     x:Name="MessageTb"
                     FontSize="14"
                     FontWeight="Normal"
                     HorizontalAlignment="Left"
                     Background="Transparent"
                     BorderThickness="0"
                     CaretBrush="White"
                     IsReadOnly="{Binding IsMyLfg, Converter={StaticResource BoolInverter}}"
                     IsHitTestVisible="{Binding IsMyLfg}"
                     Margin="5 0 0 0"
                     VerticalAlignment="Center"
                     GotKeyboardFocus="LfgMessage_OnGotKeyboardFocus"
                     LostKeyboardFocus="LfgMessage_OnTbLostKeyboardFocus"
                     Loaded="LfgMessage_OnTbLoaded"
                     KeyDown="LfgMessage_OnKeyDown"
                     PreviewMouseLeftButtonDown="LfgMessage_OnMouseLeftButtonDown" />

            <settings:CheckboxSetting Grid.Row="0" Grid.Column="2"
                                      Foreground="{StaticResource GreenBrush}"
                                      x:Name="IsRaidCb"
                                      IsOn="{Binding IsRaid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Left"
                                      Height="Auto"
                                      Margin="-37 0 0 0"
                                      SettingName="Raid"
                                      CheckboxSize="14"
                                      CheckBoxColor="{StaticResource GreenBrush}" />

            <StackPanel
                Orientation="Horizontal"
                Grid.Row="0" Grid.Column="5">

                <Button VerticalAlignment="Center"
                        Margin=" 5 2 0 0"
                        Style="{StaticResource NostrumContentOpacityButtonStyle}"
                        Command="{Binding PostCommand}">

                    <Path Data="{StaticResource SvgConfirm}" Margin="3" Height="11" Width="15" Stretch="Uniform"
                          ToolTip="Apply"
                          Fill="White" />
                </Button>
                <Button x:Name="btn"
                        VerticalAlignment="Center"
                        Margin=" 5 2 0 0"
                        Style="{StaticResource NostrumContentOpacityButtonStyle}"
                        Command="{Binding RemoveCommand}">

                    <Path Data="{StaticResource SvgClose}" Margin="3" Height="11" Width="15" Stretch="Uniform"
                          ToolTip="Apply"
                          Fill="White" />
                </Button>
            </StackPanel>
        </Grid>

    </DataTemplate>

    <!--#endregion-->

    <!--#region Misc -->
    <DataTemplate x:Key="ItemDataTemplate" DataType="data:Item">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Ellipse Width="30" Height="{Binding ElementName=icon, Path=ActualWidth}" x:Name="icon"
                     Stroke="#7fff"
                     StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Ellipse.Fill>
                    <ImageBrush
                        ImageSource="{Binding IconName, Converter={StaticResource IconNameToPath}}" />
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" Foreground="#9fff" Text="{Binding Name}"
                       VerticalAlignment="Center" Margin="5 0" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="MoongourdEncounterDataTemplate" DataType="chatControls:EncounterViewModel">
        <Grid VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <StackPanel HorizontalAlignment="Left">

                <TextBlock Text="{Binding BossName}" HorizontalAlignment="Left" TextAlignment="Left" FontSize="13"
                           Foreground="{StaticResource MoongourdAccentBrush}" VerticalAlignment="Center" Margin="5 0" />
                <TextBlock Text="{Binding DungeonName}" TextAlignment="Left" FontSize="11" HorizontalAlignment="Left"
                           Foreground="{StaticResource MoongourdFadedAccentBrush}" VerticalAlignment="Center"
                           Margin="5 0" />
            </StackPanel>
            <TextBlock Text="{Binding PlayerDps, StringFormat='{}{0:#,#}'}" Grid.Column="1" Margin="5 0"
                       VerticalAlignment="Center" Foreground="#fff" HorizontalAlignment="Center" />
            <TextBlock Text="{Binding PlayerDeaths}" Grid.Column="2" VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Foreground="#9fff" />
            <Button Style="{StaticResource NostrumContentOpacityButtonStyle}" Grid.Column="3" VerticalAlignment="Center"
                    Margin="5"
                    HorizontalAlignment="Center" Command="{Binding Browse}">
                <Path Data="{StaticResource SvgOpenLink}" Fill="#fff" Stretch="Uniform" Height="15"
                      VerticalAlignment="Center" />
            </Button>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="EnumDescrDataTemplate" DataType="system:Enum">
        <TextBlock
            Foreground="#afff"
            FontWeight="DemiBold"
            VerticalAlignment="Center">
            <TextBlock.Text>
                <Binding Path=".">
                    <Binding.Converter>
                        <nsConv:EnumDescriptionConverter />
                    </Binding.Converter>
                </Binding>
            </TextBlock.Text>
        </TextBlock>
    </DataTemplate>

    <!--#endregion-->

</ResourceDictionary>